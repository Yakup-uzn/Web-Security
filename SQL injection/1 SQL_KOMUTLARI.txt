****Password1
TEMEL SQL BİLGİSİ

CREATE DATABASE DB_ADI                    -- VERİ TABANI OLUŞTURUR
DROP DATABASE DB_ADI                      -- VERİ TABANINI SİLER


CREAT TABLE Tablo_adı(                    -- TABLO OLUŞTURUR 
       USER varchar(255),                 -- TABLOYA KOLON VE KOLONUN TİPİNİ TANIMLIYORUZ
       ...... NOT NULL,                   -- KOLONA VERİLECEK DEGERİN NULL OLMAMASINI SAĞLAR
       ...... PRIMARY KEY,                -- KOLONA VERİLECEK DEGERİN BENZERSİZ ŞEKİLDE TANIMLAMAMIZI SAĞLAR
       KOLON KOLON_TİPİ,
       PRIMARY KEY(K1,Kn),                -- BU ŞEKİLDEDE TANIMLAYABİLİRİZ,PRIMARY KEY NULL OLAMAZ
       ......              
);  

ALTER KOMUTU                                       -- VERİ TABANINDAKİ NESNELERİN ÖZELLİKLERİNİ DEĞİŞTİRMEMİZE OLANAK SAĞLAR      
ALTER TABLE Tablo_adı ADD kolon k.tipi             -- TABLOYA KOLON EKLEMEMİZİ SAĞLIYOR
ALTER TABLE Tablo_adı DROP COLUMN kolon            -- TABLODAN KOLUNU SİLMEMİZİ SAĞLIYOR
ALTER TABLE Tablo_adı ALTER COLUMN kolon k.tipi    -- TABLODAKİ KOLUNUN VERİ TİPİNİ DEŞİĞTİRMEMİZİ SAĞLAR 
 

SELECT KOMUTU                               -- TABLODAN KAYIT ÇEKER 
SELECT*FROM Tablo_adı                       -- TÜM TABLOYU LİSTE ŞEKLİNDE GÖSTERİLİR 
SELECT K1,K2 FROM Tablo_adı                 -- TABLODAN SADECE K1 VE K2 DEĞERİNİ LİSTELER
SELECT [K1],[K2] FROM Tablo_adı             -- K1/Kn= USER NAME İSE ARADA BOŞLUK OLDUGUNDAN [] İÇİNDE YAZILMALI 


INSERT KOMUTU                               -- TABLOYA YENİ KAYIT EKLER  
INSERT INTO tablo_adı(K1,K2) VALUES(V1,V2)  -- TABLOYA K1=V1,K2=V2 OLACAK ŞEKİLDE YENİ KAYIT EKLER 
--TABLODA OTOMATİK ATANAN DEĞERLERE EKLEME YAPMIYORUZ VE NULL OLMAMASI GEREKEN DEGERLERİ YAZMALIYIZ YOKSA HATA ALIRIZ
--BU KODU EXCELLDE KULLANARAK TOPLU KAYIT EKLEYEBİLİRİZ  
INSERT INTO COSTUMERS ([COSTUMERNAME], [CITY], [BIRTHDATE], [DISTRICT], [GENDER]) VALUES ('BURAK','İSTANBUL','1990-12-21','ESENYURT','E')



UPDATE KOMUTU                               -- BİR TABLODAKİ KAYDIN BİR YADA DAHA FAZLA ALANI GÜNCELLER,DEĞİŞTİRİR
UPDATE table_name SET K1=v1,K2=v2, ...      -- TÜM K1 KOLONU V1 OLUR,TÜM K2 KOLUNU V2 OLUR 
UPDATE table_name SET K1=DATEDIFF(YEAR,BİRTDATE,GATEDATE()) -- YAŞ HESAPLAR


DELETE FROM tablo_adı                       -- TÜM TABLOYU SİLER AMA
YENİ KAYIT EKLEDİĞİMİZDE OTOMATİK ALINAN DEĞERLER KALDIĞI YERDEN DEVAM EDER.KOMPLE SİLMEK İÇİN ;
TRUNCATE TABLE tablo_adı                    -- KOMUTU İLE TAMAMEN SİLERİZ TABLOYU KALINTI KALMAZ

WHERE KOMUTU                                      -- Yalnızca belirli bir koşulu karşılayan kayıtları çıkarmak için kullanılır.
SELECT * FROM ZIMMET WHERE CİHAZ_MARKA='LENOVO&'  -- CİHAZ MARKASI LENOVO.... OLAN KAYITLARI GÖSTERİR
               
                   WHERE ŞART KOMUT OPERATÖRLERİ =,>,<,>=,<=...BETWEEN,LIKE,IN,AND,OR

BETWEEN-Arasında
LIKE-Örüntü arama
IN-Bir sütun için birden çok olası değerleri belirtmek için

ÖRNEKLER :
-SELECT * FROM Musteriler WHERE Sehir='İstanbul' AND Ulke='Türkiye'       -- Şehri İstanbul ve Ülkesi Türkiye olan müşterileri listeler
-SELECT * FROM Musteri WHERE NOT Ulke='İngiltere' AND NOT Ulke='Ekvator'  -- müşteri tablosundan ülkeleri İngiltere ve Ekvator olmayanları listeler.
-SELECT * FROM Musteri 
WHERE Ulke='Somali' AND (Sehir='Mogadişu' OR Sehir='Kismayo') --müşteriler tablosundan ülkesi Somali olup şehri Mogadişu ya da Kismayo olan herkesi listeler
-SELECT * FROM STUDENT WHERE USER LIKE "M%";       -- ADI M İLE BAŞLAYANLAR
-SELECT * FROM STUDENT WHERE ID BETWEEN 7 AND 15;  -- ID'Sİ 7 İLE 15 ARASINDA OLANLARI LİSTELER

DISTINCT KOMUTU                                 -- YALNIZCA FARKLI FARKLI DEĞERLERİ DÖNDÜRMEK İÇİN KULLANILIR.
SELECT DISTINCT CİHAZ_MARKA FROM ZIMMET         -- ZIMMET TABLOSUNDAKİ CİHAZ_MARKA KOLONUN ALTINDAKİ BİRBİRİNDEN FARKLI SONUÇLARI GÖSTERİR

ORDER BY KOMUTU                                -- SIRALAMA YAPMAMIZI SAĞLAR
ASC                                            -- (DEFAULT) KÜÇÜKTEN BÜYÜĞE SIRALAMA A-Z
DESC                                           -- BÜYÜKTEN KÜÇÜĞE SIRALAMA Z-A
SELECT*FROM Tablo_adı ORDER BY KOLON1 DESC     -- TÜM TABLOYU B>K OLACAK ŞEKİLDE KOLON1'E GÖRE SIRALAR 
SELECT*FROM Tblo_adı ORDER BY K1 ASC,K2 DESC   -- TÜM TABLOYU ÖNCE K1'E GÖRE(A-Z) SIRALAR DAHA SONRA K2'YE GÖRE(Z-A) SIRALAR
 
TOP N(1,2,100...) KOMUTU                       -- LİSTE N ADET SATIR OLSUN DİYE KULLANIYORUZ 
SELECT TOP 100 FROM Tablo_adı                  -- TABLODAN 100 KİŞİ GÖSTERİLSİN
SELECT TOP 100 PERCENT FROM Tablo_adı          -- PERCENT İLE YÜZDELİK OKARAK İFADE EDEBİLİRİZ


TOPLAMA FONKSİYONLARI (Aggregate Functions)
- COUNT = BİR TABLODAKİ KAYITLARIN SAYISLMASI AMACI İLE KULLANILIR
 HERHANGİ BİR KOLONDAKİ SAYISAL DEĞERLERİN  ;
- AVG = ORTALAMASINI BULMAMIZI SAĞLAR 
- MIN = EN KÜÇÜK OLANINI BULUR
- MAX = EN BÜYÜK OLANINI BULUR
- SUM = TOPLAMINI VERİR

CONVERT FONKSİYONU
SELECT CONVERT((DATE/TİME/DATATİME),'2019-01-01 08:46:10.000')= (OUTPUT TİPİ,İNPUT KOLONU)  
ÇIKTILAR;
- DATE = 2019-01-01
- TİME = 08:46:10.000
- DATETİME = 2019-01-01 08:46:10.000


DATEPART FONKSİYONU
DATEPART() fonksiyonunda yıl, ay, gün, hafta, saat, dakika saniye
yada mili saniye değerlerini sayısal olarak döndürebiliriz.
DATEPART(MONTH/YEAR/DAY,COLUMN) GROUP BY DE BELİRTMEMİZ GEREKİR.

TABLODAN KAYIT SİLME 
-Delete from tablo_adi [where şartlar]
DELETE FROM SALES WHERE CATEGORY4='KONSERVE' 

-------------------------------------------------------------
GROUP BY UYGULAMALARI :
--------------------------------------------------------------

ÖRNEK :
  DATE_ = 2019-01-01 08:46:10.000 TARİHLERİ BU ŞEKİLDE İSE 
 -ALTER TABLE SALES ADD DATE2 DATE               - TABLOYA DATE2 KOLUNUNU EKLER
 -UPDATE SALES SET DATE2=CONVERT(DATE,DATE_)     - NULL OLAN DATE2 KOLUNUNU DÖNÜŞTÜRME YAPARAK SADECE TARİH OLARAK YAZAR

--------------------------------------------------------------

ÖRNEK :
BİR ŞEHİRDE BİR GÜNDE TOPLAM NE KADAR SATIŞ YAPILDIĞINI ÖGRENMEK İCİN SENARYO

-SELECT CITY,DATE,SUM(TOTALPRICE) AS takma_ad FROM Tablo_adı
 WHERE CITY='ANKARA' AND DATE='2019-01-01'
 GROUP BY CITY,DATE

AÇIKLAMA : SUM KOMUTU İLE BELLİ ŞEHİR VE TARİHTEKİ TOPLAM KAZANCI HESAPLATIYORUZ VE 
AS KOMUTU İLE GÖSTERİLECEK KOLONUN ADINI VERİYORUZ

---------------------------------------------------------------

ÖRNEK :
İSTANBULDAKİ TÜM ŞUBELERİN TOPLAM GÜNLÜK KAZANCINI TEK TEK GÖRME

-SELECT CITY,DISTRICT,SUM(TOTALPRICE) AS TOPLAM FROM SALES 
 WHERE CITY='İSTANBUL' AND DATE2='2019-01-01'        -- ŞARTLAR
 GROUP BY CITY,DISTRICT                              -- Aggregate Functions KULLANDIĞIMIZDA GROUP BY KULLANMAMIZ GEREKİR
 ORDER BY DISTRICT                                   -- SIRALAMA İÇİN  

---------------------------------------------------------------

ÖRNEK :
MAĞAZALARIN AYLARA GÖRE SATIŞ RAKAMLARINI GETİRME 

-SELECT CITY,DISTRICT, SUM(TOTALPRICE) AS [AYLIK KAZANÇ] FROM SALES
 WHERE DATE2 BETWEEN '2019-01-01'AND '2019-02-01'AND CITY='İSTANBUL'
 GROUP BY  CITY,DISTRICT
 ORDER BY [AYLIK KAZANÇ]

-----------------------------------------------------------------

ÜRÜN KATEGORİLERİNE GÖRE SATIŞ RAKAMLARINI GETİRME
-SELECT CATEGORY1,CATEGORY2,CATEGORY3,CATEGORY4,SUM(TOTALPRICE) AS KAZANÇ,SUM(AMOUNT) AS ADET 
 FROM SALES
 GROUP BY  CATEGORY1,CATEGORY2,CATEGORY3,CATEGORY4
 ORDER BY  CATEGORY1,CATEGORY2,CATEGORY3,CATEGORY4

-----------------------------------------------------------------

MÜŞTERİLERİN HARCAMALARINI GETİRME
SELECT CUSTOMERNAME,CUSTOMERCODE,SUM(TOTALPRICE) AS HARCAMA FROM SALES
GROUP BY CUSTOMERNAME,CUSTOMERCODE
ORDER BY CUSTOMERNAME,CUSTOMERCODE

-----------------------------------------------------------------

MAĞAZALARIN MÜŞTERİ SAYILARINI GETİRME-TEKİL MÜŞTERİ SAYISI

SELECT CITY,DISTRICT,COUNT(DISTINCT CUSTOMERCODE) AS [MÜŞTERİ SAYISI] FROM SALES
WHERE CITY='İSTANBUL'
GROUP BY CITY,DISTRICT
ORDER BY CITY,DISTRICT

----------------------------------------------------------------

MAĞAZALARIN AYLIK CİROLARINI HESAPLAMA

-SELECT CITY,DISTRICT,COUNT(DISTINCT CUSTOMERCODE)AS [MÜŞTERİ SAYISI],SUM(TOTALPRICE) AS [AYLIK CİRO] 
 FROM SALES
 WHERE CITY='İSTANBUL' AND DATE2 BETWEEN '2019-01-01' AND '2019-02-01'
 GROUP BY CITY,DISTRICT
 HAVING SUM(TOTALPRICE)>5000       -Aggregate Functions KULLANARAK ŞART KOYMAK İSTERSEK HAVING KULLANABİLİRİZ 
 ORDER BY CITY,DISTRICT
----------------------------------------------------------------

                                        -- VERİ TİPLERİ -- 
TAM SAYI VERİ TİPLERİ

 İNT : TAM SAYI DEĞERLERİ TUTMAK İÇİN -+(2^31)-1 :2 MİLYON BİT VERİ (4 BYTE)
 TİNYİNT : 0-255 ARASI DEĞER TUTAR ÖRNEK ÜLKE KODLARI (1 BYTE)
 BİGİNT : -+(2^63)-1 BİT'E KADAR DEĞER ALABİLİR(8 BYTE)
 SMALLİNT : -+(2^15)-1 'E KADAR DEĞER ALABİLİR :32.767 ÖRNEĞİN TÜM DÜNYADAKİ ŞEHİRLER (2 BYTE)
 BİT : 0 VE 1 DEĞERİNİ ALIR CİNSİYET,EWET HAYIR GİBİ BİLGİLER

ONDALIKLI SAYI VERİ TİPLERİ

 DECİMAL(X,Y)=ONDALIKLI SAYI İÇİN,X TAM KISMI VE Y KESİRLİ KISMIN BASAMAK BOYUTU GİRİLİR.ÖRNEGİN VİRGÜLDEN SONRA 3 RAKAM TUTMAK GİBİ
 FLOAT=VİRGÜLDEN ÖNCEKİ VE SONRAKİ DEĞERLER İÇİN 17 DİJİTLİK YER TUTAR

STRİNG VERİ TİPLERİ

 CHAR(X),NCHAR(X),NVARCHAR(MAX)= X SAYISI KADAR DEĞER GİREBİLİRİZ.
 MESELA X 50 İSE BİZDE 10 KRAKTERLİ BİR VERİ TUTARSAK GERİ KALAN KARAKTERLERİ 
 BOŞLUK KRAKTERİ İLE 50'YE TAMAMLAR.TEL NO-TC ......

 VARCHAR(X),NVARCHAR(X),VARCHAR(MAX)=KRAKTERİN SONUNA BOŞLUK EKLEME YOKTUR.İSİM-METİN-YORUM-ÖZGEÇMİŞ.....
 
 VARCHAR(MAX),NVARCHAR(MAX)= BİR ÖZGEÇMİŞ VERİSİ TUTARKEN BOYUT SORUNU YAŞAMAK İSTEMİYORSAK KULLANABİLİRİZ 2 MİYAR KÜSÜR KRAKTERE KADAR VERİ TUTAR

 NCHAR,NVARCHAR,NTEXT GİBİ VERİ TİPLERİNİN BAŞINDAKİ N HARFİ UNİCODE'U TEMSİL EDER.YANİ YABANCI KRAKTERLERİ GİRMEMİZE İZİN VERİR
 YANİ ULUSLAR ARASI BİR YAZILIM YAPIYORSAK BAŞINDA N OLAN VERİ TİPLERİNİ SEÇİYORUZ
 **ZARARI İSE BAŞINDA N OLMAYAN VERİ TİPLERİNDE BİR KRAKTER İÇİN 1 BYTE LIK YER TUTULUYOR,N OLAN VT İSE 2 BYTE LIK YER TUTULUYOR
   YABANCI KARAKTERİ DE DESTEKLEDİĞİ İÇİN 4000 KRAKTERLİK VERİ GİRİLEBİLİR
   DESTEKLEMEYEN VT İSE 8000 KRAKTERLİK VERİ GİRİLEBİLİR


TARİH-SAAT VERİ TİPLERİ 
 
  DATE = 0001-01-01 İLE 9999-12-31 YILLARI ARASI TARİH TUTUYOR 4 BYTE
  SMALLDATE = 1900-2079 YILLARI ARASI TARİH TUTAR 3 BYTE 
  DATETİME = YY-AY-GÜN SAAT:DK:SN:MS ŞEKLİNDE VERİ TUTAR 8 BYTE
  TİME = SAAT:DK:SN:MS ŞEKLİNDE VERİ TUTAR 5 BYTE


                                      İLİŞKİSEL VERİTABANI KAVRAMI-RRDS
ÖRNEK E-TİCARET SİSTEMİ
  1-KULLANICI SİSTEME LOGİN OLUR(ADRES,TELEFON,MAİL....)
  2-SEÇTİĞİ ÜRÜN YADA ÜRÜNLERİ SEPETE EKLER (ADRES LİSTESİNDEN ADRES SEÇER)
  3-SEPETİ EKLEDİĞİ ÜRÜNÜN ÖDEME EKRANINA GİDER (BU SIRADA SİPARİŞ OLUŞTURULUR KKARTI ÖDEMESİ GERÇEKLEŞTİRİLİR)
  4-ÜRÜN SEVKEDİLİR (FATURA KESİLİR VE ÜRÜN SEVK EDİLİR)
   







